<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  


<mapper namespace="com.socialvideo.data.mappers.mobile.MobileVideoMapper">

   
   
   
   <resultMap type="com.socialvideo.data.dto.mobile.MobileVideoDTO" id="MobileVideoDTO">
        <id column="id" property="id"/>
        <result property="UUID" column="UUID"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>  
        <result property="latitude" column="latitude"/>  
        <result property="longitude" column="longitude"/>
        <result property="durationtxt" column="durationtxt"/>
        <result property="tags" column="tags"/>  
        <result property="shootingtypeid" column="shootingtypeid"/>         
        <result property="videotypeids" column="videotypeids"/>         
        <result property="markerimgid" column="markerimgid"/> 
        <result property="ratingssum" column="ratingssum"/>
        <result property="ratingscount" column="ratingscount"/>
        <result property="playscount" column="playscount"/>
        <result property="likescount" column="likescount"/>
        <result property="datecreated" column="datecreated"/>
        <result property="videourl" column="videourl"/>
        <result property="thumburl" column="thumburl"/>
        <result property="sharethumburl" column="sharethumburl"/>
        <result property="promotemap" column="promotemap"/>
        <association property="user" column="{userid_fk=userid_fk}" javaType="com.socialvideo.data.dto.mobile.MobileUserDTOSmall" select="com.socialvideo.data.mappers.mobile.MobileUserMapper.selectVideoDTO_User"/>
    </resultMap> 


 
	   <resultMap type="com.socialvideo.data.dto.mobile.MobileVideoDTO" extends="MobileVideoDTO" id="MobileVideoDTOWithDistance">
	        <result property="distance" column="distance"/> 
	  </resultMap> 
 
 
 
	  <select id="selectVideoByUUID" parameterType="map" resultMap="MobileVideoDTO">
	        SELECT a.* FROM videos a WHERE a.UUID = #{uuid}
	   </select>
 
 
  
   <select id="selectNearyByVideos"  parameterType="map" resultMap="MobileVideoDTOWithDistance">
 		SELECT *,  ROUND(((ACOS(SIN(#{QUERY.location.latnumber} * PI() / 180) * SIN(latitude * PI() / 180) + COS(#{QUERY.location.latnumber} * PI() / 180) * COS(latitude * PI() / 180) * COS((#{QUERY.location.lngnumber} - longitude) * PI() / 180)) * 180 / PI()) * 60 * 1.1515),1) as distance 
 		FROM videos a WHERE 1 = 1 AND a.status = 1 AND a.healthstatus = 1
		HAVING distance &lt;= #{QUERY.range}
		ORDER BY distance ASC LIMIT #{QUERY.offset}, #{QUERY.limit}; 
	</select>

   <select id="selectCountNearyByVideos"  parameterType="map" resultType="java.lang.Integer">
 		SELECT count(*) FROM videos a WHERE 1 = 1 AND a.status = 1 AND a.healthstatus = 1
		AND ROUND(((ACOS(SIN(#{QUERY.location.latnumber} * PI() / 180) * SIN(latitude * PI() / 180) + COS(#{QUERY.location.latnumber} * PI() / 180) * COS(latitude * PI() / 180) * COS((#{QUERY.location.lngnumber} - longitude) * PI() / 180)) * 180 / PI()) * 60 * 1.1515),1) &lt;= #{QUERY.range}
	</select>



    <select id="selectVideos" parameterType="map" resultMap="MobileVideoDTO">
       SELECT * FROM videos a WHERE 1 = 1 AND a.status = 1 AND a.healthstatus = 1
        
        <if test="QUERY.querytype == 'MAP'.toString()">
 		 AND (
		(
		(#{QUERY.bounds.southwest.latnumber} &lt;= #{QUERY.bounds.northeast.latnumber} AND a.latitude BETWEEN #{QUERY.bounds.southwest.latnumber} AND #{QUERY.bounds.northeast.latnumber}) 
		OR 
		(#{QUERY.bounds.northeast.latnumber} &lt;= #{QUERY.bounds.southwest.latnumber} AND a.latitude BETWEEN #{QUERY.bounds.northeast.latnumber} AND #{QUERY.bounds.southwest.latnumber})
		)
		AND 
		(
		(#{QUERY.bounds.southwest.lngnumber} &lt;= #{QUERY.bounds.northeast.lngnumber} AND a.longitude BETWEEN #{QUERY.bounds.southwest.lngnumber} AND #{QUERY.bounds.northeast.lngnumber}) 
		OR 
		(#{QUERY.bounds.northeast.lngnumber} &lt;= #{QUERY.bounds.southwest.lngnumber} AND a.longitude BETWEEN #{QUERY.bounds.northeast.lngnumber} AND #{QUERY.bounds.southwest.lngnumber})
		)
		)
 		</if>
 		
 
     	 <if test="QUERY.userid != null and QUERY.userid != ''.toString()">
             AND a.userid_fk = #{QUERY.userid}
      	</if>


     	 <if test="QUERY.querytype == 'titledescription'.toString()">
             AND ( a.title LIKE #{QUERY.querytxtlike} OR a.description LIKE #{QUERY.querytxtlike}) 
      	</if>

     	 <if test="QUERY.querytype == 'tags'.toString()">
             AND (a.tags LIKE #{QUERY.querytxtlike}) 
      	</if>

		<if test="QUERY.shootingtype != null and QUERY.shootingtype != 0 ">
			AND a.shootingtype = #{QUERY.shootingtype}
		</if>

		<if test="QUERY.videotype != null and QUERY.videotype != 0 ">
			AND a.markerimgid LIKE #{QUERY.videotype} 
		</if>


   		<if test="QUERY.when != null and QUERY.when == 'today'.toString()">
			AND a.datecreated BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 day)
		</if>
		<if test="QUERY.when != null and QUERY.when == 'yesterday'.toString()">
			AND a.datecreated BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 day) AND CURDATE()
		</if>
		<if test="QUERY.when != null and QUERY.when == '10 days'.toString()">
			AND a.datecreated BETWEEN DATE_ADD(CURDATE(), INTERVAL -10 day) AND CURDATE()
		</if>
			
		<if test="QUERY.when != null and QUERY.when == 'this month'.toString()">
			AND a.datecreated BETWEEN DATE_SUB(CURDATE(),INTERVAL (DAY(CURDATE())-1) DAY) AND LAST_DAY(NOW())
		</if>

		<if test="QUERY.when != null and QUERY.when == 'last month'.toString()">
			AND a.datecreated BETWEEN DATE_SUB(DATE_SUB(CURDATE(),INTERVAL (DAY(CURDATE())-1) DAY), INTERVAL 1 MONTH) AND DATE_SUB(CURDATE(),INTERVAL (DAY(CURDATE())) DAY)
		</if>

		<if test="QUERY.when != null and QUERY.when == 'this year'.toString()">
			AND a.datecreated BETWEEN MAKEDATE(YEAR(CURDATE()),1) AND LAST_DAY(NOW())
		</if>
	
	
		<if test="QUERY.when != null and QUERY.when == 'last year'.toString()">
			AND a.datecreated BETWEEN MAKEDATE(YEAR(CURDATE())-1,1) AND STR_TO_DATE(CONCAT(12,31,YEAR(CURDATE())-1), '%m%d%Y')
		</if>		
		
      ORDER BY
      
      <if test="QUERY.sort == null or QUERY.sort == ''.toString()">
       		a.promotemap DESC, a.datecreated DESC 
       </if>
      
      
      <if test="QUERY.sort != null and QUERY.sort == 'all'.toString()">
       		a.datecreated DESC 
       </if>
       
       <if test="QUERY.sort != null and QUERY.sort == 'bestof'.toString()">
       		a.promotemap DESC, a.datecreated DESC 
       </if>
       
       <if test="QUERY.sort != null and QUERY.sort == 'latest'.toString()">
       	a.datecreated DESC 
       </if>

      <if test="QUERY.sort != null and QUERY.sort == 'likes'.toString()">
            a.likescount DESC, 	a.datecreated DESC
      </if>  
   
      <if test="QUERY.sort != null and QUERY.sort == 'toprated'.toString()">
            a.ratingssum DESC, a.datecreated DESC
      </if> 
      
      <if test="QUERY.sort != null and QUERY.sort == 'mostplayed'.toString()">
            a.playscount DESC, a.datecreated DESC
      </if> 
   
      LIMIT #{QUERY.offset}, #{QUERY.limit}; 
    </select> 


    <select id="selectCountVideos" parameterType="map" resultType="java.lang.Integer">
       SELECT count(*) FROM videos a WHERE 1 = 1 AND a.status = 1 AND a.healthstatus = 1
        
        <if test="QUERY.querytype == 'MAP'.toString()">
 		 AND (
		(
		(#{QUERY.bounds.southwest.latnumber} &lt;= #{QUERY.bounds.northeast.latnumber} AND a.latitude BETWEEN #{QUERY.bounds.southwest.latnumber} AND #{QUERY.bounds.northeast.latnumber}) 
		OR 
		(#{QUERY.bounds.northeast.latnumber} &lt;= #{QUERY.bounds.southwest.latnumber} AND a.latitude BETWEEN #{QUERY.bounds.northeast.latnumber} AND #{QUERY.bounds.southwest.latnumber})
		)
		AND 
		(
		(#{QUERY.bounds.southwest.lngnumber} &lt;= #{QUERY.bounds.northeast.lngnumber} AND a.longitude BETWEEN #{QUERY.bounds.southwest.lngnumber} AND #{QUERY.bounds.northeast.lngnumber}) 
		OR 
		(#{QUERY.bounds.northeast.lngnumber} &lt;= #{QUERY.bounds.southwest.lngnumber} AND a.longitude BETWEEN #{QUERY.bounds.northeast.lngnumber} AND #{QUERY.bounds.southwest.lngnumber})
		)
		)
 		</if>
 		
 
     	 <if test="QUERY.userid != null and QUERY.userid != ''.toString()">
             AND a.userid_fk = #{QUERY.userid}
      	</if>


     	 <if test="QUERY.querytype == 'titledescription'.toString()">
             AND ( a.title LIKE #{QUERY.querytxtlike} OR a.description LIKE #{QUERY.querytxtlike}) 
      	</if>

     	 <if test="QUERY.querytype == 'tags'.toString()">
             AND (a.tags LIKE #{QUERY.querytxtlike}) 
      	</if>

		<if test="QUERY.shootingtypeid != null and QUERY.shootingtypeid != 0 ">
			AND a.shootingtypeid = #{QUERY.shootingtypeid}
		</if>

		<if test="QUERY.videotypeid != null and QUERY.videotypeid != 0 ">
			AND a.markerimgid LIKE #{QUERY.videotypeid} 
		</if>


   		<if test="QUERY.when != null and QUERY.when == 'today'.toString()">
			AND a.datecreated BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 1 day)
		</if>
		<if test="QUERY.when != null and QUERY.when == 'yesterday'.toString()">
			AND a.datecreated BETWEEN DATE_ADD(CURDATE(), INTERVAL -1 day) AND CURDATE()
		</if>
		<if test="QUERY.when != null and QUERY.when == '10 days'.toString()">
			AND a.datecreated BETWEEN DATE_ADD(CURDATE(), INTERVAL -10 day) AND CURDATE()
		</if>
			
		<if test="QUERY.when != null and QUERY.when == 'this month'.toString()">
			AND a.datecreated BETWEEN DATE_SUB(CURDATE(),INTERVAL (DAY(CURDATE())-1) DAY) AND LAST_DAY(NOW())
		</if>

		<if test="QUERY.when != null and QUERY.when == 'last month'.toString()">
			AND a.datecreated BETWEEN DATE_SUB(DATE_SUB(CURDATE(),INTERVAL (DAY(CURDATE())-1) DAY), INTERVAL 1 MONTH) AND DATE_SUB(CURDATE(),INTERVAL (DAY(CURDATE())) DAY)
		</if>

		<if test="QUERY.when != null and QUERY.when == 'this year'.toString()">
			AND a.datecreated BETWEEN MAKEDATE(YEAR(CURDATE()),1) AND LAST_DAY(NOW())
		</if>
	
	
		<if test="QUERY.when != null and QUERY.when == 'last year'.toString()">
			AND a.datecreated BETWEEN MAKEDATE(YEAR(CURDATE())-1,1) AND STR_TO_DATE(CONCAT(12,31,YEAR(CURDATE())-1), '%m%d%Y')
		</if>		
		
    </select> 

   <select id="selectRelatedTagVideos"  parameterType="map" resultMap="MobileVideoDTO">
 		SELECT * FROM videos a WHERE 1 = 1 AND a.status = 1 AND a.healthstatus = 1
 		AND match(a.tags) against (#{tags} in natural language mode)
 		ORDER BY a.promotemap DESC, a.datecreated DESC LIMIT #{offset}, #{limit}; 
   </select>




</mapper>




